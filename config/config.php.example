<?php

declare(strict_types=1);

/**
 * PHP Uploader Ver.2.0 設定ファイル
 *
 * このファイルおよびデータディレクトリは外部からアクセスできないように
 * .htaccess等で保護してください
 */

class config {
    public function index(): array {
        return [
            // 管理者用マスターキー（必ず変更してください）
            'master' => 'CHANGE_THIS_MASTER_KEY',

            // 暗号化・ハッシュ化用キー（必ず変更してください）
            'key' => 'CHANGE_THIS_ENCRYPTION_KEY',

            // セッション用ソルト（必ず変更してください）
            'session_salt' => 'CHANGE_THIS_SESSION_SALT',

            // RESTful API設定
            'api_enabled' => true,   // RESTful API機能の有効/無効
            'api_keys' => [  // 有効なAPIキー（配列で複数設定可能）
                'CHANGE_THIS_API_KEY_1' => [
                    'name' => 'Default API Key',
                    'permissions' => ['read', 'write', 'delete', 'admin'],
                    'expires' => null  // null = 無期限, または 'YYYY-MM-DD HH:mm:ss' 形式
                ]
            ],
            'api_rate_limit' => 100,    // 1時間あたりのリクエスト制限数（0で無制限）

            // アプリケーション設定
            'title' => 'PHP Uploader',
            'save_max_files' => 500,
            'max_comment' => 80,
            'max_file_size' => 100, // MB
            
            // DLキー・DELキーの必須設定
            'dlkey_required' => false,  // true: 必須, false: 任意
            'delkey_required' => false,  // true: 必須, false: 任意

            // フォルダ構造管理機能
            'folders_enabled' => true,   // フォルダ機能の有効/無効
            'max_folder_depth' => 5,      // 最大フォルダ階層深さ（1-10）
            'max_folders_per_level' => 50,   // 各階層での最大フォルダ数
            'allow_folder_creation' => true, // ユーザーによるフォルダ作成許可
            'allow_folder_deletion' => true, // ユーザーによるフォルダ削除許可

            // ファイル差し替え・編集機能
            'allow_file_replace' => true,   // ファイル差し替え機能の有効/無効
            'allow_comment_edit' => true,   // コメント編集機能の有効/無効
            'file_edit_admin_only' => false, // true: 管理者のみ編集可能, false: 誰でも編集可能

            // ディレクトリ設定
            'db_directory' => dirname(__DIR__) . '/db',
            'data_directory' => dirname(__DIR__) . '/data',
            'log_directory' => dirname(__DIR__) . '/logs',

            // セキュリティ設定
            'security' => [
                'csrf_token_expiry' => 30, // 分
                'min_key_length' => 4,
                'log_ip_address' => true,
                'max_login_attempts' => 5,
                'lockout_duration' => 900 // 15分
            ],

            // ログ設定
            'log_level' => 'INFO', // DEBUG, INFO, WARNING, ERROR
            'log_retention_days' => 30,

            // アップロードできる拡張子
            'extension' => [
                // アーカイブ・圧縮ファイル
                'zip', 'rar', 'lzh', '7z', 'tar', 'gz', 'bz2', 'xz',
                
                // ドキュメント
                'pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx',
                'odt', 'ods', 'odp', 'rtf', 'txt', 'csv',
                
                // 画像
                'jpg', 'jpeg', 'png', 'gif', 'bmp', 'svg', 'webp',
                'tiff', 'tif', 'ico', 'psd',
                
                // 音声
                'mp3', 'wav', 'aac', 'ogg', 'flac', 'm4a', 'wma',
                
                // 動画
                'mp4', 'avi', 'mov', 'wmv', 'flv', 'mkv', 'webm',
                'm4v', 'mpg', 'mpeg',
                
                // 開発・設定ファイル
                'json', 'xml', 'yaml', 'yml', 'ini', 'conf', 'cfg',
                'sql', 'log', 'md', 'html', 'htm', 'css', 'js',
                
                // その他
                'epub', 'mobi', 'azw3', 'fb2'
            ],

            // トークン設定
            'token_expiry_minutes' => 10,

            // バージョン情報（composer.jsonから自動取得）
            'version' => $this->getVersion()
        ];
    }

    /**
     * セキュリティ設定の検証を行う
     */
    public function validateSecurityConfig(): bool {
        $config = $this->index();

        // 基本的なセキュリティ設定をチェック
        if (strpos($config['master'], 'CHANGE_THIS') !== false) {
            return false;
        }

        if (strpos($config['key'], 'CHANGE_THIS') !== false) {
            return false;
        }

        if (strpos($config['session_salt'], 'CHANGE_THIS') !== false) {
            return false;
        }

        return true;
    }    /**
     * 設定の検証を行う
     */
    public function validate(): array {
        $errors = [];
        $config = $this->index();

        // 必須設定の確認
        if ($config['master'] === 'CHANGE_THIS_MASTER_KEY_Ver2') {
            $errors[] = 'マスターキーを変更してください';
        }

        if ($config['key'] === 'CHANGE_THIS_ENCRYPTION_KEY_Ver2') {
            $errors[] = '暗号化キーを変更してください';
        }

        if ($config['session_salt'] === 'CHANGE_THIS_SESSION_SALT') {
            $errors[] = 'セッションソルトを変更してください';
        }

        // ディレクトリの存在確認
        $directories = ['db_directory', 'data_directory', 'log_directory'];
        foreach ($directories as $dir) {
            if (!is_dir($config[$dir])) {
                $errors[] = "{$dir} ディレクトリが存在しません: {$config[$dir]}";
            }
        }

        return $errors;
    }

    /**
     * composer.jsonからバージョン情報を取得
     */
    private function getVersion(): string {
        $composerPath = __DIR__ . '/../composer.json';

        if (file_exists($composerPath)) {
            $composerData = json_decode(file_get_contents($composerPath), true);
            if (isset($composerData['version'])) {
                return $composerData['version'];
            }
        }

        return 'x.x.x';
    }

    /**
     * アプリケーションルートディレクトリを取得
     */
    private function getAppRoot(): string {
        // config.phpの位置からアプリケーションルートを算出
        return dirname(__DIR__);
    }
}
